{% extends 'VoteBundle::base.html.twig' %}

{% block title %}{% trans %}vote.page.title{% endtrans %}{% endblock %}

{% block body %}
<h1>{% trans %}vote.title{% endtrans %}</h1>

<div class="well well-sm">
    <p>
        {% trans %}vote.list.text{% endtrans %}
    </p>

    {% if app.user %}
        <p>
            {% if app.user.vote > 0 %}
                {% trans with { '%points%': app.user.vote } %}vote.list.user.points{% endtrans %}
            {% else %}
                {% trans with { '%supportUS%': path('supportUs_individual') } %}vote.list.user.no.points{% endtrans %}
            {% endif %}
        </p>
    {% else %}
        <p>
            {% trans with { '%login%': path('fos_user_security_login'), '%register%': path('fos_user_registration_register'), '%supportUS%': path('supportUs_individual') } %}vote.list.user.not.login{% endtrans %}
        <p/>
    {% endif %}

    <p>
        {% trans with {'%contact%': path('ma_contact')} %}vote.list.missing.feature{% endtrans %}
    </p>
</div>

<table id="features-table" class="table table-striped table-bordered">
    <thead>
        <tr>
            <td>Title</td>{% if app.user %}<td>Your vote</td>{% endif %}<td>Votes</td><td>Target</td><td>Ratio (%)</td><td class="hidden">Status</td>
        </tr>
    </thead>
    <tbody>
    {% for feature in features  %}
        {% if app.user %}
            {% set totalPoints = feature.totalPoints %}
            {% set feature = feature.0 %}
        {% endif %}
        <tr{% if constant('STATUS_FINISH', feature) == feature.status %} class="hidden"{% endif %}>
            <td><a href="{{ path('vote_show_feature', {slug: feature.slug, id: feature.id}) }}">{{ feature.title }}</a></td>
            {% if app.user %}
                <td>{{ totalPoints ?? 0 }}</td>
            {% endif %}
            <td>{{ feature.votesCountCache }}</td>
            <td>{{ feature.votesTarget }}</td>
            <td>{{ feature.completionRatio|round }}</td>
            <td class="hidden">{{ feature.status }}</td>
        </tr>
    {% endfor %}
    </tbody>
</table>
{% endblock %}

{% block stylesheets %}
{% stylesheets
    '@VoteBundle/Resources/public/css/datatables.min.css'
    '@VoteBundle/Resources/public/css/vote.css'
    output='css/datatables.min.css'
 %}
    <link rel="stylesheet" href="{{ asset_url }}" />
{% endstylesheets %}
{% endblock %}

{% block javascripts %}
{% javascripts
    '@VoteBundle/Resources/public/js/datatables.min.js'
    output='js/datatables.min.js'
 %}
    <script src="{{ asset_url }}"></script>
{% endjavascripts %}

<script>
    $(document).ready(function() {
        var table = $('#features-table').DataTable({
            order: [[ {% if app.user %}4{% else %}3{% endif %}, 'desc' ], [ 0, 'asc' ]],
            pageLength: 50,
        });

        // Get query string variable
        // https://css-tricks.com/snippets/javascript/get-url-variables/
        var getQueryVariable = function (variable) {
            var query = window.location.search.substring(1);
            var vars = query.split('&');
            for (var i=0;i<vars.length;i++) {
                var pair = vars[i].split('=');
                if(pair[0] == variable) {
                    return pair[1];
                }
            }

            return(false);
        }

        var search = getQueryVariable('q');
        if (search) {
            table.search(search).draw;
        }

        // Hide finish features
        var hideFinishFeatures = function() {
            var column = {% if app.user %}5{% else %}4{% endif %};
            var status = {{ constant('VoteBundle\\Model\\FeatureInterface::STATUS_FINISH') }};
            $.fn.dataTable.ext.search.length = 0;
            $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
                if (data[column] < status) {
                    return true;
                } else {
                    return false;
                }
            });
        };

        // Show finish features
        var showFinishFeatures = function() {
            var column = {% if app.user %}5{% else %}4{% endif %};
            var status = {{ constant('VoteBundle\\Model\\FeatureInterface::STATUS_FINISH') }};
            $.fn.dataTable.ext.search.length = 0;
            $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
                if (data[column] == status) {
                    return true;
                } else {
                    return false;
                }
            });
        };

        // Add checkbox button to change display of finish features
        $('#features-table_wrapper div.row:nth-child(1)').after('<input id="show-finish-features" type="checkbox"> <label for="show-finish-features">{% trans %}vote.feature.show.finish{% endtrans %}</label>')

        $('#show-finish-features').on('change', function() {
            if (this.checked) {
                showFinishFeatures();
            } else {
                hideFinishFeatures();
            }
            table.draw();
        });

        // Hide finish features by default
        hideFinishFeatures();
        table.draw();
        // Remove hidden class of finish features (added to avoid flickering)
        table.$('tr.hidden').each(function() {
            $(this).removeClass('hidden');
        });
    });
</script>
{% endblock %}
