# To get started with security, check out the documentation:
# https://symfony.com/doc/current/security.html
security:
    # Refresh authenticated user after role change
    always_authenticate_before_granting:  true
    # https://symfony.com/doc/current/security.html#encoding-the-user-s-password
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt

    role_hierarchy:
        ROLE_BOT:         ROLE_USER
        ROLE_GUEST:       ROLE_USER
        ROLE_BASIC:       ROLE_USER
        ROLE_BETA:        ROLE_BASIC
        ROLE_ADMIN:       ROLE_BETA
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # https://symfony.com/doc/current/security.html#b-configuring-how-users-are-loaded
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
        api_key_user_provider:
            id: UserBundle\Security\ApiKeyUserProvider

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall for MCO public API
        public_api:
            pattern: ^/MediaConchOnline/api/public/
            stateless: true
            security: false

        # Firewall for MCO protected API
        protected_api:
            pattern: ^/MediaConchOnline/api/protected/
            stateless: true
            simple_preauth:
                authenticator: UserBundle\Security\ApiKeyAuthenticator
            provider: api_key_user_provider

        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_token_generator: security.csrf.token_manager
                always_use_default_target_path: false
                default_target_path: homepage
                use_referer: true
            logout:       true
            anonymous:    true
            remember_me:
                secret: '%secret%'
                lifetime: 31536000 # 365 days in seconds
                always_remember_me: false

    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
